{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          data = _useState2[0],\n          setData = _useState2[1];\n\n      var _useState3 = useState(true),\n          _useState4 = _slicedToArray(_useState3, 2),\n          isLoading = _useState4[0],\n          setLoading = _useState4[1];\n\n      var getData = function getData() {\n        var response, json;\n        return _regeneratorRuntime.async(function getData$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(fetch(\"http://specsphones.rf.gd/api/products/all\"));\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 6:\n                json = _context.sent;\n                setData(json.results);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 13:\n                _context.prev = 13;\n                setLoading(false);\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 10, 13, 16]], Promise);\n      };\n\n      var renderItem = function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Detail', {\n              data: item.key\n            });\n          },\n          style: styles.container,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.image\n            },\n            style: {\n              width: 160,\n              height: 160\n            }\n          }), _jsx(Text, {\n            style: styles.Title,\n            children: item.title\n          }), _jsx(Text, {\n            children: item.key\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            children: [\"Rates: \", item.rate]\n          })]\n        });\n      };\n\n      useEffect(function () {\n        getData();\n      }, []);\n      return _jsx(View, {\n        children: isLoading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#2196F3\"\n        }) : _jsx(FlatList, {\n          data: data,\n          keyExtractor: function keyExtractor(item) {\n            return item.key;\n          },\n          renderItem: renderItem\n        })\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Home.js"],"names":["React","useState","useEffect","Home","data","setData","isLoading","setLoading","getData","fetch","response","json","results","console","error","renderItem","item","navigation","navigate","key","styles","container","uri","image","width","height","Title","title","fontSize","fontWeight","rate","Component","StyleSheet","create","margin","padding"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;;;;;;IAGqBC,I;;;;;;;;;;;;;WAErB,kBAAQ;AAEJ,sBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,UAAOG,IAAP;AAAA,UAAaC,OAAb;;AACA,uBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,UAAOK,SAAP;AAAA,UAAkBC,UAAlB;;AAGA,UAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEeC,KAAK,CAAC,2CAAD,CAFpB;;AAAA;AAEFC,gBAAAA,QAFE;AAAA;AAAA,iDAGWA,QAAQ,CAACC,IAAT,EAHX;;AAAA;AAGFA,gBAAAA,IAHE;AAIRN,gBAAAA,OAAO,CAACM,IAAI,CAACC,OAAN,CAAP;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRC,gBAAAA,OAAO,CAACC,KAAR;;AANQ;AAAA;AAQRP,gBAAAA,UAAU,CAAC,KAAD,CAAV;AARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;;AAYA,UAAMQ,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC7B,eACI,MAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMC,UAAU,CAACC,QAAX,CAAoB,QAApB,EAA6B;AAACd,cAAAA,IAAI,EAACY,IAAI,CAACG;AAAX,aAA7B,CAAN;AAAA,WAA3B;AACI,UAAA,KAAK,EAAEC,MAAM,CAACC,SADlB;AAAA,qBAII,KAAC,KAAD;AAAO,YAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAAEN,IAAI,CAACO;AAAX,aAAf;AAAoC,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,GAAP;AAAYC,cAAAA,MAAM,EAAC;AAAnB;AAA3C,YAJJ,EAKI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA,sBAA4BV,IAAI,CAACW;AAAjC,YALJ,EAMI,KAAC,IAAD;AAAA,sBAAOX,IAAI,CAACG;AAAZ,YANJ,EAOI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACS,cAAAA,QAAQ,EAAE,EAAX;AAAeC,cAAAA,UAAU,EAAE;AAA3B,aAAb;AAAA,kCAAyDb,IAAI,CAACc,IAA9D;AAAA,YAPJ;AAAA,UADJ;AAWH,OAZD;;AAcA5B,MAAAA,SAAS,CAAC,YAAK;AACXM,QAAAA,OAAO;AAEV,OAHQ,EAGN,EAHM,CAAT;AAKA,aACI,KAAC,IAAD;AAAA,kBAEQF,SAAS,GACL,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAC;AAAtC,UADK,GAIL,KAAC,QAAD;AACA,UAAA,IAAI,EAAEF,IADN;AAEA,UAAA,YAAY,EAAE,sBAAAY,IAAI;AAAA,mBAAIA,IAAI,CAACG,GAAT;AAAA,WAFlB;AAGA,UAAA,UAAU,EAAEJ;AAHZ;AANZ,QADJ;AAiBH;;;;EAxDiCf,KAAK,CAAC+B,S;;SAAnB5B,I;AA4DrB,IAAMiB,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,MAAM,EAAE,CADD;AAEPC,IAAAA,OAAO,EAAE;AAFF,GADkB;AAM7BT,EAAAA,KAAK,EAAE;AAEHQ,IAAAA,MAAM,EAAC,CAFJ;AAGHL,IAAAA,UAAU,EAAC,MAHR;AAIHD,IAAAA,QAAQ,EAAE;AAJP;AANsB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { ActivityIndicator, ScrollView, Button, View, Text, FlatList, SafeAreaView, StatusBar, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport default class Home extends React.Component{\n\nrender(){\n\n    const [data, setData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n\n    \n    const getData = async () => {\n        try {\n            const response = await fetch(\"http://specsphones.rf.gd/api/products/all\");\n            const json = await response.json();\n            setData(json.results);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const renderItem = ({ item }) => {\n        return (\n            <TouchableOpacity onPress={() => navigation.navigate('Detail',{data:item.key})}\n                style={styles.container}\n            >\n                \n                <Image source={{uri: item.image }}  style={{width:160, height:160}}/>\n                <Text style={styles.Title}>{item.title}</Text>\n                <Text>{item.key}</Text>\n                <Text style={{fontSize: 15, fontWeight: \"bold\"}}>Rates: {item.rate}</Text>\n            </TouchableOpacity>\n        );\n    };\n\n    useEffect(()=> {\n        getData();\n    \n    }, [])\n\n    return(\n        <View>\n            {\n                isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#2196F3\"/>\n\n                ):(\n                    <FlatList\n                    data={data}\n                    keyExtractor={item => item.key}\n                    renderItem={renderItem}/>\n                )\n            }\n        \n        </View>\n    )\n\n}\n \n}\n\nconst styles = StyleSheet.create({ \n    container: {\n        margin: 1,\n        padding: 20,\n    },\n\n    Title :{\n\n        margin:5,\n        fontWeight:'bold',\n        fontSize: 24\n    }    \n\n})"]},"metadata":{},"sourceType":"module"}