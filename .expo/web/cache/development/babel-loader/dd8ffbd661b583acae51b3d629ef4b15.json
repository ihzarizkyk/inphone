{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getData = function getData() {\n    var response, json;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://7c05-139-228-215-130.ngrok.io/api/products/all\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.results);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: \"center\"\n      },\n      children: _jsx(View, {\n        style: styles.card,\n        children: _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Details');\n          },\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.Title,\n            children: item.title\n          }), _jsx(Image, {\n            source: {\n              uri: item.image\n            },\n            style: {\n              width: 160,\n              height: 160\n            }\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 10,\n              fontWeight: \"bold\"\n            },\n            children: [\"Rating: \", item.rates]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            children: [\"Harga: Rp\", item.price]\n          })]\n        })\n      })\n    });\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsx(View, {\n    children: isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#2196F3\"\n    }) : _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem\n    })\n  });\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 15\n  },\n  card: {\n    boxShadow: \"10px 10px 17px -12px rgba(0,0,0,0.75)\",\n    width: 250,\n    height: 250,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Home.js"],"names":["React","useState","useEffect","Home","navigation","data","setData","isLoading","setLoading","getData","fetch","response","json","results","console","error","renderItem","item","flex","alignItems","justifyContent","styles","card","navigate","container","Title","title","uri","image","width","height","fontSize","fontWeight","rates","price","id","StyleSheet","create","margin","padding","boxShadow","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, StyleSheet, Text, View, ActivityIndicator, Image, ScrollView, TouchableOpacity, FlatList } from 'react-native';\n\n\nconst Home = ({navigation}) =>{\n    const [data, setData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n\n    \n    const getData = async () => {\n        try {\n            const response = await fetch(\"https://7c05-139-228-215-130.ngrok.io/api/products/all\");\n            const json = await response.json();\n            setData(json.results);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const renderItem = ({ item }) => {\n        return (\n          <View style={{flex: 1, alignItems: 'center', justifyContent: \"center\"}}>\n            <View style={styles.card}>\n            <TouchableOpacity onPress={() => navigation.navigate('Details')}\n                style={styles.container}>\n                <Text style={styles.Title}>{item.title}</Text>   \n                <Image source={{uri: item.image }}  style={{width:160, height:160}}/>\n                <Text style={{fontSize: 10, fontWeight: \"bold\"}}>Rating: {item.rates}</Text>\n                <Text style={{fontSize: 15, fontWeight: \"bold\"}}>Harga: Rp{item.price}</Text>\n            </TouchableOpacity>\n              \n            </View>\n          </View>\n        );\n    };\n\n    useEffect(()=> {\n        getData();\n    \n    }, [])\n \n     \n    return(\n        <View>\n            {\n                isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#2196F3\"/>\n\n                ):(\n                    <FlatList\n                    data={data}\n                    keyExtractor={item => item.id}\n                    renderItem={renderItem}/>\n                )\n            }\n        \n        </View>\n    )\n}\n\nexport default Home;\n\nconst styles = StyleSheet.create({ \n    container: {\n        margin: 1,\n        padding: 20,\n    },\n\n    Title :{\n\n        margin:5,\n        fontWeight:'bold',\n        fontSize: 15\n    },\n\n    card :{\n      boxShadow: \"10px 10px 17px -12px rgba(0,0,0,0.75)\",\n      width: 250,\n      height: 250,\n      marginBottom: 10\n    }    \n\n})"]},"metadata":{},"sourceType":"module"}