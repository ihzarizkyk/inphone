{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Details = function Details(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getDetail = function getDetail() {\n    var urlphones, response, json;\n    return _regeneratorRuntime.async(function getDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            urlphones = \"https://f9f6-139-228-215-130.ngrok.io/api/products/detail/\" + route.params.keys;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(urlphones));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            setData(json.results);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setLoading(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11, 14, 17]], Promise);\n  };\n\n  useEffect(function () {\n    getDetail();\n  }, []);\n  return _jsx(_Fragment, {\n    children: isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#2196F3\"\n    }) : _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 10,\n            marginBottom: 5\n          }\n        }), _jsx(Image, {\n          source: {\n            uri: data[0].image\n          },\n          style: {\n            width: 250,\n            height: 300\n          }\n        }), _jsx(Text, {\n          style: styles.judul,\n          children: data[0].title\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          children: [\"Rating:\", data[0].rates]\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          children: [\"Rp\", data[0].price]\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: \"bold\"\n          },\n          children: data[0].brands\n        }), data[0].desc.split(\"<br>\").map(function (element, index) {\n          return _jsx(Text, {\n            style: {\n              fontSize: 12,\n              fontWeight: \"bold\",\n              marginTop: 0\n            },\n            children: element\n          }, index);\n        })]\n      })\n    })\n  });\n};\n\nexport default Details;\nvar styles = StyleSheet.create({\n  container: {\n    margin: \"auto\",\n    justifyContent: \"center\",\n    padding: 40,\n    width: \"75%\"\n  },\n  judul: {\n    fontSize: 45,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Details.js"],"names":["React","useState","useEffect","Details","route","data","setData","isLoading","setLoading","getDetail","urlphones","params","keys","fetch","response","json","results","console","log","styles","container","marginTop","marginBottom","uri","image","width","height","judul","title","fontSize","fontWeight","rates","price","brands","desc","split","map","element","index","StyleSheet","create","margin","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  View,\n  Text,\n  FlatList,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  TouchableOpacity,\n  ActivityIndicator,\n  Image,\n  ScrollView\n} from \"react-native\";\n\nconst Details = ({ route }) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const getDetail = async () => {\n    const urlphones = `https://f9f6-139-228-215-130.ngrok.io/api/products/detail/${route.params.keys}`;\n    try {\n      const response = await fetch(urlphones);\n      const json = await response.json();\n      setData(json.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getDetail();\n  }, []);\n\n  return (\n    <>\n      {/* <Text>Welcome</Text> */}\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\n      ) : (\n        <ScrollView>\n\t\t\t<View style={styles.container}>\n\t\t\t<Text style={{ marginTop: 10, marginBottom: 5 }}></Text>\n\t\t\t<Image source={{ uri: data[0].image }} style={{ width: 250, height: 300 }} />\n\t\t\t<Text style={styles.judul}>{data[0].title}</Text>\n\t\t\t<Text style={{ fontSize: 15, fontWeight: \"bold\" }}>Rating:{data[0].rates}</Text>\n\t\t\t<Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Rp{data[0].price}</Text>\n\t\t\t<Text style={{ fontSize: 18, fontWeight: \"bold\" }}>{data[0].brands}</Text>\n\t\t\t{data[0].desc.split(\"<br>\").map((element, index)=>(\n\t\t\t\t<Text key={index} style={{ fontSize: 12, fontWeight: \"bold\", marginTop: 0 }}>{element}</Text>\n\t\t\t))}\n\t\t\t</View>\n        </ScrollView>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: \"auto\",\n    justifyContent: \"center\",\n    padding: 40,\n    width: \"75%\",\n  },\n  judul: {\n    fontSize: 45,\n    fontWeight: \"bold\",\n  },\n});"]},"metadata":{},"sourceType":"module"}