{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"getData\",\n    value: function getData() {\n      var response, json;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://specsphones.rf.gd/api/products/all'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              json = _context.sent;\n              this.setState({\n                data: json\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n              _context.prev = 13;\n              this.setState({\n                isLoading: false\n              });\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10, 13, 16]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n\n      _jsx(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        children: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n          data: data,\n          keyExtractor: function keyExtractor(_ref, index) {\n            var id = _ref.id;\n            return id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsxs(Text, {\n              children: [item.title, \", \", item.rates]\n            });\n          }\n        })\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Home.js"],"names":["React","useState","useEffect","Home","props","state","data","isLoading","fetch","response","json","setState","console","log","getData","flex","padding","index","id","item","title","rates","Component","styles","StyleSheet","create","container","margin","Title","fontWeight","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;;;;;;IAGqBC,I;;;;;AAEnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAHiB;AAOlB;;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BC,KAAK,CAAC,2CAAD,CAFhC;;AAAA;AAEUC,cAAAA,QAFV;AAAA;AAAA,+CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGUA,cAAAA,IAHV;AAII,mBAAKC,QAAL,CAAc;AAAEL,gBAAAA,IAAI,EAAEI;AAAR,eAAd;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAMIE,cAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAQI,mBAAKF,QAAL,CAAc;AAAEJ,gBAAAA,SAAS,EAAE;AAAb,eAAd;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAYA,6BAAoB;AAClB,WAAKO,OAAL;AACD;;;WAEH,kBAAQ;AAEJ,wBAA4B,KAAKT,KAAjC;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,SAAd,eAAcA,SAAd;;AAEE,WAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEQ,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA,kBACGT,SAAS,GAAG,KAAC,iBAAD,KAAH,GACR,KAAC,QAAD;AACE,UAAA,IAAI,EAAED,IADR;AAEE,UAAA,YAAY,EAAE,4BAASW,KAAT;AAAA,gBAAGC,EAAH,QAAGA,EAAH;AAAA,mBAAmBA,EAAnB;AAAA,WAFhB;AAGE,UAAA,UAAU,EAAE;AAAA,gBAAGC,IAAH,SAAGA,IAAH;AAAA,mBACV,MAAC,IAAD;AAAA,yBAAOA,IAAI,CAACC,KAAZ,QAAqBD,IAAI,CAACE,KAA1B;AAAA,cADU;AAAA;AAHd;AAFJ;AAYL;;;;EA3CiCrB,KAAK,CAACsB,S;;SAAnBnB,I;AA+CrB,IAAMoB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE,CADD;AAEPX,IAAAA,OAAO,EAAE;AAFF,GADkB;AAM7BY,EAAAA,KAAK,EAAE;AAEHD,IAAAA,MAAM,EAAC,CAFJ;AAGHE,IAAAA,UAAU,EAAC,MAHR;AAIHC,IAAAA,QAAQ,EAAE;AAJP;AANsB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { ActivityIndicator, ScrollView, Button, View, Text, FlatList, SafeAreaView, StatusBar, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport default class Home extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async getData() {\n    try {\n      const response = await fetch('http://specsphones.rf.gd/api/products/all');\n      const json = await response.json();\n      this.setState({ data: json });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\nrender(){\n\n    const { data, isLoading } = this.state;\n\n      <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.title}, {item.rates}</Text>\n            )}\n          />\n        )}\n      </View>\n\n}\n \n}\n\nconst styles = StyleSheet.create({ \n    container: {\n        margin: 1,\n        padding: 20,\n    },\n\n    Title :{\n\n        margin:5,\n        fontWeight:'bold',\n        fontSize: 24\n    }    \n\n})"]},"metadata":{},"sourceType":"module"}