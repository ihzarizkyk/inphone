{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Home from \"./screen/Home\";\nimport About from \"./screen/About\";\nimport Details from \"./screen/Details\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar sampleTabNavigation = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(NavigationContainer, {\n        children: [_jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Home\",\n            component: Home\n          }), _jsx(Stack.Screen, {\n            name: \"Details\",\n            component: Details\n          }), _jsx(Stack.Screen, {\n            name: \"About\",\n            component: About\n          })]\n        }), _jsxs(sampleTabNavigation.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n\n                if (route.name === \"Home\") {\n                  iconName = \"md-home-sharp\";\n                } else if (route.name === \"About\") {\n                  iconName = \"md-information-circle-sharp\";\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          },\n          tabBarOptions: {\n            activeTintColor: \"#0F58E3\",\n            inactiveTintColor: \"gray\"\n          },\n          children: [_jsx(sampleTabNavigation.Screen, {\n            name: \"Home\",\n            component: Home\n          }), _jsx(sampleTabNavigation.Screen, {\n            name: \"About\",\n            component: About\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/App.js"],"names":["React","Home","About","Details","createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","Ionicons","sampleTabNavigation","Stack","App","route","tabBarIcon","color","size","iconName","name","activeTintColor","inactiveTintColor","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,mBAAmB,GAAGJ,wBAAwB,EAApD;AACA,IAAMK,KAAK,GAAGH,0BAA0B,EAAxC;;IAEqBI,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,MAAC,mBAAD;AAAA,mBAEA,MAAC,KAAD,CAAO,SAAP;AAAA,qBACE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,SAAS,EAAET;AAArC,YADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,SAAnB;AAA6B,YAAA,SAAS,EAAEE;AAAxC,YAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,SAAS,EAAED;AAAtC,YAHF;AAAA,UAFA,EAQE,MAAC,mBAAD,CAAqB,SAArB;AACE,UAAA,aAAa,EAAE;AAAA,gBAAGS,KAAH,QAAGA,KAAH;AAAA,mBAAgB;AAC7BC,cAAAA,UAAU,EAAE,2BAAqB;AAAA,oBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,oBAAXC,IAAW,SAAXA,IAAW;AAC/B,oBAAIC,QAAJ;;AAEA,oBAAIJ,KAAK,CAACK,IAAN,KAAe,MAAnB,EAA2B;AACzBD,kBAAAA,QAAQ,GAAG,eAAX;AACD,iBAFD,MAEO,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AACjCD,kBAAAA,QAAQ,GAAG,6BAAX;AACD;;AAED,uBAAO,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAEA,QAAhB;AAA0B,kBAAA,IAAI,EAAED,IAAhC;AAAsC,kBAAA,KAAK,EAAED;AAA7C,kBAAP;AACD;AAX4B,aAAhB;AAAA,WADjB;AAcE,UAAA,aAAa,EAAE;AACbI,YAAAA,eAAe,EAAE,SADJ;AAEbC,YAAAA,iBAAiB,EAAE;AAFN,WAdjB;AAAA,qBAmBE,KAAC,mBAAD,CAAqB,MAArB;AAA4B,YAAA,IAAI,EAAC,MAAjC;AAAwC,YAAA,SAAS,EAAEjB;AAAnD,YAnBF,EAoBE,KAAC,mBAAD,CAAqB,MAArB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,SAAS,EAAEC;AAApD,YApBF;AAAA,UARF;AAAA,QADF;AAiCD;;;;EAnC8BF,KAAK,CAACmB,S;;SAAlBT,G","sourcesContent":["import React from \"react\";\nimport Home from \"./screen/Home\";\nimport About from \"./screen/About\";\nimport Details from \"./screen/Details\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nconst sampleTabNavigation = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <NavigationContainer>\n      \n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={Home} />\n        <Stack.Screen name=\"Details\" component={Details} />\n        <Stack.Screen name=\"About\" component={About} />\n      </Stack.Navigator>\n\n        <sampleTabNavigation.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ color, size }) => {\n              let iconName;\n\n              if (route.name === \"Home\") {\n                iconName = \"md-home-sharp\";\n              } else if (route.name === \"About\") {\n                iconName = \"md-information-circle-sharp\";\n              }\n\n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n          })}\n          tabBarOptions={{\n            activeTintColor: \"#0F58E3\",\n            inactiveTintColor: \"gray\",\n          }}\n        >\n          <sampleTabNavigation.Screen name=\"Home\" component={Home} />\n          <sampleTabNavigation.Screen name=\"About\" component={About} />\n        </sampleTabNavigation.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}