{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Navigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getData = function getData() {\n    var response, json;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://7c05-139-228-215-130.ngrok.io/api/products/all\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.results);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(View, {\n        style: styles.card,\n        children: _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Details', {\n              ID: item.id\n            });\n          },\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.Title,\n            children: item.title\n          }), _jsx(Image, {\n            source: {\n              uri: item.image\n            },\n            style: {\n              width: 160,\n              height: 160\n            }\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 10,\n              fontWeight: \"bold\"\n            },\n            children: [\"Rating: \", item.rates]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            children: [\"Harga: Rp\", item.price]\n          })]\n        })\n      })\n    });\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsx(ScrollView, {\n    children: _jsx(View, {\n      children: isLoading ? _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#2196F3\"\n      }) : _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: renderItem\n      })\n    })\n  });\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 15\n  },\n  card: {\n    shadowColor: \"10px 10px 17px -12px rgba(0,0,0,0.75)\",\n    width: 250,\n    height: 250,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Home.js"],"names":["React","useState","useEffect","Navigation","Home","navigation","data","setData","isLoading","setLoading","getData","fetch","response","json","results","console","error","renderItem","item","flex","alignItems","justifyContent","styles","card","navigate","ID","id","container","Title","title","uri","image","width","height","fontSize","fontWeight","rates","price","StyleSheet","create","margin","padding","shadowColor","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, StyleSheet, Text, View, ActivityIndicator, Image, ScrollView, TouchableOpacity, FlatList,} from 'react-native';\nimport { Navigation } from \"@react-navigation/native\";\n\nconst Home = ({navigation}) =>{\n    const [data, setData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n\n    \nconst getData = async () => {\n        try {\n            const response = await fetch(\"https://7c05-139-228-215-130.ngrok.io/api/products/all\");\n            const json = await response.json();\n            setData(json.results);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const renderItem = ({ item }) => {\n        return (\n          <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n            <View style={styles.card}>\n            <TouchableOpacity onPress={() => navigation.navigate('Details',{ID: item.id})}\n                style={styles.container}>\n                <Text style={styles.Title}>{item.title}</Text>   \n                <Image source={{uri: item.image }}  style={{width:160, height:160}}/>\n                <Text style={{fontSize: 10, fontWeight: \"bold\"}}>Rating: {item.rates}</Text>\n                <Text style={{fontSize: 15, fontWeight: \"bold\"}}>Harga: Rp{item.price}</Text>\n            </TouchableOpacity> \n            </View>\n          </View>\n        );\n    };\n\n    useEffect(()=> {\n        getData();\n    \n    }, [])\n \n     \n    return(\n        <ScrollView>\n       <View>\n            {\n                isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#2196F3\"/>\n\n                ):(\n                    <FlatList\n                    data={data}\n                    keyExtractor={(item) => item.id}\n                    renderItem={renderItem}/>\n                )\n            }\n        \n        </View>\n        </ScrollView>\n    );\n    }\n        \n\n    export default Home;\n\n    const styles = StyleSheet.create({ \n        container: {\n            margin: 1,\n            padding: 20,\n        },\n\n        Title :{\n\n            margin:5,\n            fontWeight:'bold',\n            fontSize: 15\n        },\n\n        card :{\n        shadowColor:\"10px 10px 17px -12px rgba(0,0,0,0.75)\",\n        width: 250,\n        height: 250,\n        marginBottom: 10\n        }    \n\n    })"]},"metadata":{},"sourceType":"module"}