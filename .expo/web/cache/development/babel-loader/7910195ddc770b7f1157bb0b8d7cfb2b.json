{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Home from \"./screen/Home\";\nimport About from \"./screen/About\";\nimport Details from \"./screen/Details\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar sampleTabNavigation = createBottomTabNavigator();\n\nvar BottomNavigator = function BottomNavigator() {\n  return _jsxs(sampleTabNavigation.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = \"md-home-sharp\";\n          } else if (route.name === \"About\") {\n            iconName = \"md-information-circle-sharp\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#0F58E3\",\n      inactiveTintColor: \"gray\"\n    },\n    children: [_jsx(sampleTabNavigation.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(sampleTabNavigation.Screen, {\n      name: \"About\",\n      component: About\n    })]\n  });\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: \"false\"\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"BottomNavigator\",\n            component: BottomNavigator,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"DetailSpech\",\n            component: Details,\n            options: {\n              headerShown: false\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/App.js"],"names":["React","Home","About","Details","createBottomTabNavigator","NavigationContainer","Ionicons","createNativeStackNavigator","Stack","sampleTabNavigation","BottomNavigator","route","tabBarIcon","color","size","iconName","name","activeTintColor","inactiveTintColor","App","headerShown","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;;;AAEA,IAAMC,KAAK,GAAGD,0BAA0B,EAAxC;AACA,IAAME,mBAAmB,GAAGL,wBAAwB,EAApD;;AAEA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SACE,MAAC,mBAAD,CAAqB,SAArB;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAAqB;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAC/B,cAAIC,QAAJ;;AAEA,cAAIJ,KAAK,CAACK,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAG,eAAX;AACD,WAFD,MAEO,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AACjCD,YAAAA,QAAQ,GAAG,6BAAX;AACD;;AAED,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACD;AAX4B,OAAhB;AAAA,KADjB;AAcE,IAAA,aAAa,EAAE;AACbI,MAAAA,eAAe,EAAE,SADJ;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAdjB;AAAA,eAkBE,KAAC,mBAAD,CAAqB,MAArB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,SAAS,EAAEjB;AAAnD,MAlBF,EAmBE,KAAC,mBAAD,CAAqB,MAArB;AAA4B,MAAA,IAAI,EAAC,OAAjC;AAAyC,MAAA,SAAS,EAAEC;AAApD,MAnBF;AAAA,IADF;AAuBD,CAxBD;;IA0BqBiB,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aAAO,KAAC,mBAAD;AAAA,kBACL,MAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,aAAa,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAhC;AAAA,qBACE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,iBAAnB;AAAqC,YAAA,SAAS,EAAEV,eAAhD;AAAiE,YAAA,OAAO,EAAE;AAAEU,cAAAA,WAAW,EAAE;AAAf;AAA1E,YADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,aAAnB;AAAiC,YAAA,SAAS,EAAEjB,OAA5C;AAAqD,YAAA,OAAO,EAAE;AAAEiB,cAAAA,WAAW,EAAE;AAAf;AAA9D,YAFF;AAAA;AADK,QAAP;AAMD;;;;EAR8BpB,KAAK,CAACqB,S;;SAAlBF,G","sourcesContent":["import React from \"react\";\nimport Home from \"./screen/Home\";\nimport About from \"./screen/About\";\nimport Details from \"./screen/Details\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\nconst sampleTabNavigation = createBottomTabNavigator();\n\nconst BottomNavigator = () => {\n  return (\n    <sampleTabNavigation.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = \"md-home-sharp\";\n          } else if (route.name === \"About\") {\n            iconName = \"md-information-circle-sharp\";\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: \"#0F58E3\",\n        inactiveTintColor: \"gray\",\n      }}>\n      <sampleTabNavigation.Screen name=\"Home\" component={Home} />\n      <sampleTabNavigation.Screen name=\"About\" component={About} />\n    </sampleTabNavigation.Navigator>\n  );\n};\n\nexport default class App extends React.Component {\n  render() {\n    return <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: \"false\" }}> \n        <Stack.Screen name=\"BottomNavigator\" component={BottomNavigator} options={{ headerShown: false }}/>\n        <Stack.Screen name=\"DetailSpech\" component={Details} options={{ headerShown: false }}/>\n      </Stack.Navigator>\n    </NavigationContainer>;\n  }\n}"]},"metadata":{},"sourceType":"module"}