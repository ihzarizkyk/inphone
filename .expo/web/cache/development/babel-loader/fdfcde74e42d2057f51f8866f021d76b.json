{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"getData\",\n    value: function getData() {\n      var response, json;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://specsphones.rf.gd/api/products/all'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              json = _context.sent;\n              this.setState({\n                data: json\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n              _context.prev = 13;\n              this.setState({\n                isLoading: false\n              });\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10, 13, 16]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n\n      var renderItem = function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Detail', {\n              data: item.id\n            });\n          },\n          style: styles.container,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.image\n            },\n            style: {\n              width: 160,\n              height: 160\n            }\n          }), _jsx(Text, {\n            style: styles.Title,\n            children: item.title\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            children: [\"Rates: \", item.rate]\n          })]\n        });\n      };\n\n      useEffect(function () {\n        getData();\n      }, []);\n      return _jsx(View, {\n        children: isLoading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#2196F3\"\n        }) : _jsx(FlatList, {\n          data: data,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: renderItem\n        })\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    margin: 1,\n    padding: 20\n  },\n  Title: {\n    margin: 5,\n    fontWeight: 'bold',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/home/ihzarizkyk/Documents/reactnative/inphone/screen/Home.js"],"names":["React","useState","useEffect","Home","props","state","data","isLoading","fetch","response","json","setState","console","log","renderItem","item","navigation","navigate","id","styles","container","uri","image","width","height","Title","title","fontSize","fontWeight","rate","getData","Component","StyleSheet","create","margin","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { ActivityIndicator, ScrollView, Button, View, Text, FlatList, SafeAreaView, StatusBar, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport default class Home extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async getData() {\n    try {\n      const response = await fetch('http://specsphones.rf.gd/api/products/all');\n      const json = await response.json();\n      this.setState({ data: json });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\nrender(){\n\n    const { data, isLoading } = this.state;\n\n    const renderItem = ({ item }) => {\n        return (\n            <TouchableOpacity onPress={() => navigation.navigate('Detail',{data:item.id})}\n                style={styles.container}\n            >\n                \n                <Image source={{uri: item.image }}  style={{width:160, height:160}}/>\n                <Text style={styles.Title}>{item.title}</Text>\n                <Text style={{fontSize: 15, fontWeight: \"bold\"}}>Rates: {item.rate}</Text>\n            </TouchableOpacity>\n        );\n    };\n\n    useEffect(()=> {\n        getData();\n    \n    }, [])\n\n    return(\n        <View>\n            {\n                isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#2196F3\"/>\n\n                ):(\n                    <FlatList\n                    data={data}\n                    keyExtractor={item => item.id}\n                    renderItem={renderItem}/>\n                )\n            }\n        \n        </View>\n    )\n\n}\n \n}\n\nconst styles = StyleSheet.create({ \n    container: {\n        margin: 1,\n        padding: 20,\n    },\n\n    Title :{\n\n        margin:5,\n        fontWeight:'bold',\n        fontSize: 24\n    }    \n\n})"]},"metadata":{},"sourceType":"module"}